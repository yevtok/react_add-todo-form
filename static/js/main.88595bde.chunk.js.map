{"version":3,"sources":["api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","hasTitleErrors","setHasTitleErrors","setUserId","hasUserIdErrors","setHasUserIdErrors","action","method","event","preventDefault","trim","completed","className","type","placeholder","value","onChange","target","disabled","map","UserInfo","href","TodoInfo","todo","classNames","TodoList","todos","initialTodos","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88595bde.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleErrors, setHasTitleErrors] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdErrors, setHasUserIdErrors] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleErrors(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdErrors(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleErrors(!title.trim());\n    setHasUserIdErrors(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label>\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n        </label>\n\n        {hasTitleErrors && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user: User) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        {hasUserIdErrors && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  // eslint-disable-next-line object-curly-newline\n  const { completed, title, user, id } = todo;\n\n  return (\n    <article\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {!!user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/user';\nimport { Todo } from './types/Todo';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nconst initialTodos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map((todo) => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos((currentTodos) => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}